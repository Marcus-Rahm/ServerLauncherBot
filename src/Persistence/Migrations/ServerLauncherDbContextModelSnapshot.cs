// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(ServerLauncherDbContext))]
    partial class ServerLauncherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Domain.Entities.ServerConfig", b =>
                {
                    b.Property<int>("ServerConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ServerInfoId");

                    b.Property<string>("ConfigName")
                        .HasColumnType("TEXT")
                        .HasColumnName("ConfigName");

                    b.Property<string>("GameType")
                        .HasColumnType("TEXT")
                        .HasColumnName("GameType");

                    b.Property<string>("GameVersion")
                        .HasColumnType("TEXT")
                        .HasColumnName("GameVersion");

                    b.Property<string>("ServerFileURL")
                        .HasColumnType("TEXT")
                        .HasColumnName("ServerFileURL");

                    b.Property<string>("ThumbnailURL")
                        .HasColumnType("TEXT");

                    b.HasKey("ServerConfigId");

                    b.ToTable("ServerConfigs");
                });

            modelBuilder.Entity("Domain.Entities.ServerInfo", b =>
                {
                    b.Property<int>("ServerInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ServerInfoId");

                    b.Property<string>("ArchiveFolder")
                        .HasColumnType("TEXT")
                        .HasColumnName("ArchiveFolder1");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInitialized")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("OwnerId")
                        .HasColumnType("datetime")
                        .HasColumnName("ArchiveFolder");

                    b.Property<int>("ServerConfigId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServerIP")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerName")
                        .HasColumnType("TEXT");

                    b.HasKey("ServerInfoId");

                    b.HasIndex("ServerConfigId");

                    b.ToTable("ServerInfos");
                });

            modelBuilder.Entity("Domain.Entities.ServerInfo", b =>
                {
                    b.HasOne("Domain.Entities.ServerConfig", "Config")
                        .WithMany()
                        .HasForeignKey("ServerConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Config");
                });
#pragma warning restore 612, 618
        }
    }
}
